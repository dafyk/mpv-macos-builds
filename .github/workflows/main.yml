name: build

on: workflow_dispatch
  #push:
  #  branches:
  #    - main
  #schedule:
    # nightly build
    #- cron: "00 12 * * *"

jobs:
  build:
    name: Build mpv from source
    runs-on: macos-11
    env:
      CC: clang
      CXX: clang++
      HOMEBREW_NO_ANALYTICS: 1
      HOMEBREW_NO_INSTALL_CLEANUP: 1
      #HOMEBREW_NO_INSTALLED_DEPENDENTS_CHECK: 1
      HOMEBREW_SDKROOT: "/Applications/Xcode_12.5.1.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk"
      MACOSX_DEPLOYMENT_TARGET: "10.13"
      SDKROOT: "/Applications/Xcode_12.5.1.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk"
      MACOS_SDK: "/Applications/Xcode_12.5.1.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk"
      SDK_PATH: "/Applications/Xcode_12.5.1.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs"
      EXTRA_CFLAGS: "-mmacosx-version-min=10.13 -isysroot /Applications/Xcode_12.5.1.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk"
      EXTRA_CXXFLAGS: "-mmacosx-version-min=10.13 -isysroot /Applications/Xcode_12.5.1.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk"
      EXTRA_LDFLAGS: "-mmacosx-version-min=10.13 -isysroot /Applications/Xcode_12.5.1.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk"
      SWIFT_FLAGS: "-target x86_64-apple-macosx10.13"
      HOMEBREW_NO_COLOR: 1
      HOMEBREW_NO_EMOJI: 1
      HOMEBREW_NO_INSTALLED_DEPENDENTS_CHECK: 1
      HOMEBREW_NO_INSTALL_UPGRADE: 1
    steps:
      - name: Get current timestamp
        id: timestamp
        run: |
          echo "::set-output name=timestamp::$(date +%s)"
          echo "::set-output name=date::$(date +%Y%m%d)"

      - name: Get latest mpv git tag
        id: mpv_tag
        uses: oprypin/find-latest-tag@v1
        with:
          repository: 'mpv-player/mpv'
          releases-only: false

      - name: Checkout dafyk/mpv-macos-builds
        uses: actions/checkout@v3
        with:
          repository: 'dafyk/mpv-macos-builds'
          fetch-depth: 0
          submodules: true

      - name: Install MacOSX 10.14 SDK
        id: macossdk
        run: |
          # MacOSX10.14 SDK
          tar -C $SDK_PATH -xf MacOSX10.14.sdk.tar.xz
          sudo rm -rf $SDK_PATH/MacOSX11.3.sdk
          sudo mv $SDK_PATH/MacOSX.sdk $SDK_PATH/MacOSX11.3.sdk
          sudo ln -s $SDK_PATH/MacOSX10.14.sdk $SDK_PATH/MacOSX.sdk
          sudo /usr/libexec/PlistBuddy -c "Set :MinimumSDKVersion 10.14" /Applications/Xcode_12.5.1.app/Contents/Developer/Platforms/MacOSX.platform/Info.plist

      - name: Install Command Line Tools for Xcode 12.5.1
        id: macoscmdtools
        run: |
          # Command Line Tools for Xcode 12.5.1
          curl -ksJLO https://www.savero.net/Command_Line_Tools_for_Xcode_12.5.1.dmg
          sudo mv /Library/Developer/CommandLineTools /Library/Developer/CommandLineTools@13
          hdiutil attach Command_Line_Tools_for_Xcode_12.5.1.dmg
          cd /Volumes/Command\ Line\ Developer\ Tools/
          sudo installer -pkg Command\ Line\ Tools.pkg -target /

      - name: Install Swift 4.x toolchain
        id: swift4
        run: |
          # Swift 4.x toolchain
          curl -ksJLO https://download.swift.org/swift-4.2.4-release/xcode/swift-4.2.4-RELEASE/swift-4.2.4-RELEASE-osx.pkg
          sudo installer -pkg swift-4.2.4-RELEASE-osx.pkg -target /
          #curl -ksJLO https://updates.cdn-apple.com/2019/cert/061-41823-20191025-5efc5a59-d7dc-46d3-9096-396bb8cb4a73/SwiftRuntimeForCommandLineTools.dmg
          #hdiutil attach SwiftRuntimeForCommandLineTools.dmg
          #sudo installer -pkg /Volumes/SwiftRuntimeForCommandLineTools/SwiftRuntimeForCommandLineTools.pkg -target /

      - name: Switch to Xcode 12.5.1
        id: xcode1251
        run: |
          # Switch to Xcode 12.5.1
          sudo xcode-select --reset
          sudo xcode-select -s /Applications/Xcode_12.5.1.app/Contents/Developer

      - name: Instal various mpv and ffmpeg dependencies using homebrew
        id: mpvffmpegdeps
        run: |
          brew tap deus0ww/tap
          brew update-reset

          # Force 10.13 deployment target for all homebrew formulas
          find $(brew --repository)/Library/Taps -type f -iname *rb -exec sed -i "" $'s/def install/def install\\\n    ENV["MACOSX_DEPLOYMENT_TARGET"] = "10.13"\\\n/' {} \;
          #for dep in luajit python@3.8 python@3.10; do sed -i "" $'s/MacOS.version/"10.13"/' $(brew --repository)/Library/Taps/homebrew/homebrew-core/Formula//$dep.rb;done
          for dep in luajit python@3.8 python@3.10 python@3.11; do find /usr/local/Homebrew/Library/Taps/homebrew/homebrew-core/Formula -iname $dep.rb -exec sed -i "" $'s/MacOS.version/"10.13"/' {} +;done

          # Patch formulas for 10.13 deployment
          patch -d$(brew --repository)/Library/Taps/deus0ww/homebrew-tap -p0 < ffpmeg.rb.patch
          patch -d$(brew --repository)/Library/Taps/deus0ww/homebrew-tap -p0 < mpv.rb.patch
          patch -d$(brew --repository)/Library/Taps/deus0ww/homebrew-tap -p0 < libplacebo.rb.patch
          patch -d$(brew --repository)/Library/Taps/deus0ww/homebrew-tap -p0 < yt-dlp.rb.patch
          echo ${{ steps.mpv_tag.outputs.tag }}-${{ github.run_number }}>VERSION

          # Uninstal bottled dependencies
          brew uninstall --ignore-dependencies --force openssl
          brew uninstall --ignore-dependencies --force gnutls
          brew uninstall --ignore-dependencies --force jpeg-xl
          brew uninstall --ignore-dependencies --force aom
          brew uninstall --ignore-dependencies --force python@3.11
          #brew uninstall --ignore-dependencies --force luajit mujs uchardet zimg gmp coreutils deus0ww/tap/dockutil@2 tag trash lz4 xz zstd jpeg-turbo libtiff little-cms2 libdvdcss libdvdread libdvdnav libb2 libarchive readline sqlite ca-certificates openssl@3 libssh2 aria2 libffi mpdecimal python@3.11 deus0ww/tap/yt-dlp vulkan-loader sdl2 deus0ww/tap/glslang deus0ww/tap/libplacebo libunibreak icu4c graphite2 glib libpng freetype pixman lzo xorgproto libxdmcp libxau libxcb libx11 libxrender libxext fontconfig cairo harfbuzz fribidi deus0ww/tap/libass zimg xvid x265 x264 giflib webp libogg libvorbis theora svt-av1 srt speex opus mpg123 lame flac libsndfile libsamplerate rubberband openjpeg opencore-amr libvpx libvidstab libsoxr mbedtls cjson librist libbs2b libbluray frei0r fdk-aac cunit deus0ww/tap/libmysofa imath openexr highway brotli deus0ww/tap/jpeg-xl deus0ww/tap/aom dav1d aribb24 deus0ww/tap/ffmpeg rtmpdump
          brew cleanup
          brew reinstall -f -s $(brew deps --include-build -n deus0ww/tap/mpv) deus0ww/tap/mpv

          #FFMPEGINFO=$(ffmpeg -version)
          #FFMPEGINFO="${FFMPEGINFO//'%'/'%25'}"
          #FFMPEGINFO="${FFMPEGINFO//$'\n'/'%0A'}"
          #FFMPEGINFO="${FFMPEGINFO//$'\r'/'%0D'}"
          FFMPEGINFO="test"
          echo "::set-output name=FFMPEG_INFO::$FFMPEGINFO"

      - name: Build Apple Disk Image
        run: |
          mkdir /tmp/mpv-release
          cp -r /usr/local/Cellar/mpv/*/mpv.app /tmp/mpv-release
          #rsync -avrz --no-links /usr/local/opt/ /tmp/mpv-release/lib/
          #cp background.tiff /tmp/background.tiff
          cp icon.icns /tmp/icon.icns
          cd /tmp/mpv-release
          brew install create-dmg dylibbundler
          dylibbundler -od -b -x ./mpv.app/Contents/MacOS/mpv -d ./mpv.app/Contents/libs/
          create-dmg --no-internet-enable --volname "mpv" --volicon "/tmp/icon.icns" --background "/tmp/background.tiff" --window-pos 200 120 --window-size 573 400 --icon-size 80 --icon "mpv.app" 200 175 --hide-extension "mpv.app" --app-drop-link 375 175 /tmp/mpv.dmg /tmp/mpv-release

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.mpv_tag.outputs.tag }}-${{ github.run_number }}
          release_name: mpv build ${{ steps.mpv_tag.outputs.tag }}
          body: |
              - Build date: `${{ steps.timestamp.outputs.date }}`
              - Version: `${{ steps.mpv_tag.outputs.tag }} (commit: ${{ steps.mpv_tag.outputs.tag }})`
              - OS support: `macOS High Sierra 10.13 or later`
              - Workflow run number: `${{ github.run_number }}`
              - FFMPEG info:
              ```
              ${{ steps.build_mpv.outputs.FFMPEG_INFO }}
              ```
          draft: false
          prerelease: false

      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: /tmp/mpv.dmg
          asset_name: mpv-${{ steps.mpv_tag.outputs.tag }}-${{ github.run_number }}.dmg
          asset_content_type: application/x-apple-diskimage
