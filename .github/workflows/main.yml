name: build

on:
  push:
    branches:
      - main
  #schedule:
    # nightly build
    #- cron: "00 12 * * *"

jobs:
  build:
    runs-on: macos-latest
    env:
      CC: clang
      CXX: clang++
      HOMEBREW_NO_ANALYTICS: 1
      HOMEBREW_NO_INSTALL_CLEANUP: 1
      MACOSX_DEPLOYMENT_TARGET: 10.13
      SDKROOT: "/Applications/Xcode_12.5.1.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.4.sdk"
      EXTRA_CFLAGS: "-mmacosx-version-min=10.13 -isysroot /Applications/Xcode_12.5.1.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.4.sdk"
      EXTRA_CXXFLAGS: "-mmacosx-version-min=10.13 -isysroot /Applications/Xcode_12.5.1.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.4.sdk"
      EXTRA_LDFLAGS: "-mmacosx-version-min=10.13 -isysroot /Applications/Xcode_12.5.1.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.4.sdk"
      PKG_CONFIG_PATH: "/usr/local/lib/pkgconfig:/usr/local/opt/openssl/lib/pkgconfig:$PKG_CONFIG_PATH"
      LD_LIBRARY_PATH: "/usr/local/lib:$LD_LIBRARY_PATH"

    steps:
      - name: Get current timestamp
        id: timestamp
        run: |
          echo "::set-output name=timestamp::$(date +%s)"
          echo "::set-output name=date::$(date +%Y%m%d)"

      - name: Get latest git tag
        id: git_tag
        uses: oprypin/find-latest-tag@v1
        with:
          repository: 'dafyk/mpv-macos-builds'
          releases-only: false

      - name: Get latest mpv git tag
        id: mpv_tag
        uses: oprypin/find-latest-tag@v1
        with:
          repository: 'mpv-player/mpv'
          releases-only: false

      - name: Checkout mpv-player/mpv
        uses: actions/checkout@v2
        with:
          repository: 'mpv-player/mpv'
          fetch-depth: 0

      - name: Install dependencies
        run: |
          sudo xcode-select -s /Applications/Xcode_12.5.1.app/Contents/Developer

          git clone https://github.com/dafyk/mpv-macos-builds.git
          sudo cp -a mpv-macos-builds/MacOSX10.4.sdk /Applications/Xcode_12.5.1.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/
          sudo rm -rf /Applications/Xcode_12.5.1.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk
          sudo ln -s /Applications/Xcode_12.5.1.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.4.sdk /Applications/Xcode_12.5.1.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk
          sudo /usr/libexec/PlistBuddy -c "Set :MinimumSDKVersion 10.4" /Applications/Xcode_12.5.1.app/Contents/Developer/Platforms/MacOSX.platform/Info.plist
          xcodebuild -showsdks
          xcodebuild -version
          /usr/bin/install_name_tool
          file /Applications/Xcode_12.5.1.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.4.sdk
          xcrun --find install_name_tool
          otool -L  /usr/bin/install_name_tool

          exit 1
          export MACOSX_DEPLOYMENT_TARGET="10.13"
          export EXTRA_CFLAGS="-mmacosx-version-min=10.13 -isysroot /Applications/Xcode_12.5.1.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.4.sdk"
          export EXTRA_CXXFLAGS="-mmacosx-version-min=10.13 -isysroot /Applications/Xcode_12.5.1.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.4.sdk"
          export EXTRA_LDFLAGS="-mmacosx-version-min=10.13 -isysroot /Applications/Xcode_12.5.1.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.4.sdk"
          #export SDKROOT="/Applications/Xcode_12.5.1.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX11.3.sdk"
          export SDKROOT="/Applications/Xcode_12.5.1.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.4.sdk"
          brew update-reset
          for dep in $(brew --repository)/Library/Taps/homebrew/homebrew-core/Formula/*.rb; do sed -i "" $'s/def install/def install\\\n    ENV["MACOSX_DEPLOYMENT_TARGET"] = "10.13"\\\n/' $dep;done
          for dep in luajit python@3.8; do sed -i "" $'s/MacOS.version/"10.13"/' $(brew --repository)/Library/Taps/homebrew/homebrew-core/Formula//$dep.rb;done

          brew uninstall --ignore-dependencies --force openssl
          brew uninstall --ignore-dependencies --force gnutls
          brew cleanup

          brew reinstall -s autoconf automake pkg-config libtool python freetype fribidi brotli little-cms2 lua@5.1 jpeg zimg libbluray libass ffmpeg meson
          # https://github.com/mpv-player/mpv/issues/10063#issuecomment-1092413762
          install_name_tool -change "@loader_path/libbrotlicommon.1.dylib" "/usr/local/opt/brotli/lib/libbrotlicommon.1.dylib" /usr/local/opt/brotli/lib/libbrotlidec.1.dylib
          install_name_tool -change "@loader_path/libbrotlicommon.1.dylib" "/usr/local/opt/brotli/lib/libbrotlicommon.1.dylib" /usr/local/opt/brotli/lib/libbrotlienc.1.dylib

      - name: Build with meson
        run: |
          sudo xcode-select -s /Applications/Xcode_12.5.1.app/Contents/Developer
          export MACOSX_DEPLOYMENT_TARGET="10.13"
          export EXTRA_CFLAGS="-mmacosx-version-min=10.13 -isysroot /Applications/Xcode_12.5.1.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.4.sdk"
          export EXTRA_CXXFLAGS="-mmacosx-version-min=10.13 -isysroot /Applications/Xcode_12.5.1.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.4.sdk"
          export EXTRA_LDFLAGS="-mmacosx-version-min=10.13 -isysroot /Applications/Xcode_12.5.1.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.4.sdk"
          export SDKROOT="/Applications/Xcode_12.5.1.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.4.sdk"
          curl -k https://www.savero.net/build-macos.patch --output ci/build-macos.patch
          patch -p1 ci/build-macos.sh < ci/build-macos.patch
          ./ci/build-macos.sh meson
          python3 TOOLS/osxbundle.py build/mpv
          mkdir -p release
          cp -r build/mpv.app release

      - name: Build Apple Disk Image
        run: |
          #cd mpv
          brew install create-dmg
          create-dmg --sandbox-safe --no-internet-enable --volname "mpv" --app-drop-link 200 185 mpv.dmg release
          #rm -rf release/mpv.app
          mv mpv.dmg release/

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.mpv_tag.outputs.tag }}
          release_name: mpv nightly build ${{ steps.timestamp.outputs.date }}
          body: |
              mpv nightly build
              build date: ${{ steps.timestamp.outputs.date }}
              version: ${{ steps.mpv_tag.outputs.tag }}
              OS support: macOS High Sierra 10.13 or later
          draft: false
          prerelease: false

      - name: Upload Release Asset
        id: upload-release-asset
        if: ${{ success() && steps.mpv_tag.outputs.tag != steps.git_tag.outputs.tag }}
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: release/mpv.dmg
          asset_name: mpv-nightly-${{ steps.mpv_tag.outputs.tag }}.dmg
          asset_content_type: application/x-apple-diskimage
