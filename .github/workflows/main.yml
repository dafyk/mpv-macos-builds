name: build

on:
  push:
    branches:
      - main
  #schedule:
    # nightly build
    #- cron: "00 12 * * *"

jobs:
  build:
    runs-on: macos-latest
    env:
      CC: clang
      CXX: clang++
      HOMEBREW_NO_ANALYTICS: 1
      HOMEBREW_NO_INSTALL_CLEANUP: 1
      MACOSX_DEPLOYMENT_TARGET: 10.13
      EXTRA_CFLAGS: "-mmacosx-version-min=10.13"
      EXTRA_CXXFLAGS: "-mmacosx-version-min=10.13"
      EXTRA_LDFLAGS: "-mmacosx-version-min=10.13"
    steps:
    - name: Get current timestamp
      id: timestamp
      run: |
        echo "::set-output name=timestamp::$(date +%s)"
        echo "::set-output name=date::$(date +%Y%m%d)"

    - name: Get latest git tag
      id: git_tag
      uses: oprypin/find-latest-tag@v1
      with:
        repository: 'dafyk/mpv-macos-builds'
        releases-only: false

    - name: Get latest mpv git tag
      id: mpv_tag
      uses: oprypin/find-latest-tag@v1
      with:
        repository: 'mpv-player/mpv'
        releases-only: false

    - name: Get number of CPU cores
      uses: SimenB/github-actions-cpu-cores@v1
      id: cpu-cores

    - name: Checkout mpv-player/mpv-build
      uses: actions/checkout@v2
      with:
        repository: 'mpv-player/mpv-build'
        fetch-depth: 0

    - name: Install dependencies
      run: |
        export MACOSX_DEPLOYMENT_TARGET="10.13"
        export EXTRA_CFLAGS="-mmacosx-version-min=10.13"
        export EXTRA_CXXFLAGS="-mmacosx-version-min=10.13"
        export EXTRA_LDFLAGS="-mmacosx-version-min=10.13"

        brew update-reset
        brew update
        for dep in $(brew --repository)/Library/Taps/homebrew/homebrew-core/Formula/*.rb; do sed -i "" $'s/def install/def install\\\n    ENV["MACOSX_DEPLOYMENT_TARGET"] = "10.13"\\\n/' $dep;done
        brew uninstall --ignore-dependencies --force openssl
        brew cleanup
        brew reinstall -s openssl@1.1
        brew install -s automake
        brew reinstall -s pkg-config
        brew reinstall -s freetype
        brew reinstall -s fontconfig
        brew install -s jpeg
        brew reinstall -s fribidi
        brew reinstall -s harfbuzz
        brew reinstall -s gnutls
        brew install -s youtube-dl
        brew install -s x264
        brew install -s x265
        brew install -s lame
        brew install -s openjpeg
        brew install -s fdk-aac
        brew reinstall -s libx11
        brew reinstall -s libjpeg
        brew reinstall -s little-cms2
        brew reinstall -s libxcb

        ./rebuild -j${{ steps.cpu-cores.outputs.count }}
        cd mpv
        #python3 ~/work/mpv-macos-builds/mpv-macos-builds/mpv/TOOLS/osxbundle.py ~/work/mpv-macos-builds/mpv-macos-builds/build/mpv
        python3 TOOLS/osxbundle.py build/mpv
        mkdir -p release
        cp -r build/mpv.app release

    - name: Build Apple Disk Image
      if: ${{ success() && steps.mpv_tag.outputs.tag != steps.git_tag.outputs.tag }}
      run: |
        cd mpv
        brew install create-dmg
        create-dmg --sandbox-safe --no-internet-enable --volname "mpv" --app-drop-link 200 185 mpv.dmg release
        #rm -rf release/mpv.app
        mv mpv.dmg release/

    - name: Create Release
      id: create_release
      if: ${{ success() && steps.mpv_tag.outputs.tag != steps.git_tag.outputs.tag }}
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ steps.mpv_tag.outputs.tag }}
        release_name: mpv nightly build ${{ steps.timestamp.outputs.date }}
        body: |
            mpv nightly build
            build date: ${{ steps.timestamp.outputs.date }}
            version: ${{ steps.mpv_tag.outputs.tag }}
            OS support: macOS High Sierra 10.13 or later
        draft: false
        prerelease: false

    - name: Upload Release Asset
      id: upload-release-asset
      if: ${{ success() && steps.mpv_tag.outputs.tag != steps.git_tag.outputs.tag }}
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: release/mpv.dmg
        asset_name: mpv-nightly-${{ steps.mpv_tag.outputs.tag }}.dmg
        asset_content_type: application/x-apple-diskimage
